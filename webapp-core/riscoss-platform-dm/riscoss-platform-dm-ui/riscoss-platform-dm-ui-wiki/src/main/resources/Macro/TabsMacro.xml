<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>Macro</web>
  <name>TabsMacro</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>Macro.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1436542778000</creationDate>
  <date>1436542778000</date>
  <contentUpdateDate>1436542778000</contentUpdateDate>
  <version>1.1</version>
  <title>Tabs macro</title>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>false</hidden>
  <content>{{box cssClass="floatinginfobox" title="**Contents**"}}{{toc start="2" depth="6" numbered="false" scope="page" /}}{{/box}}

{{velocity}}
#macro(tabs $tabsKeyNames)
    ## for debugging, please 
    ## 1) copy/paste the macro code from macro object into here
    ## 2) replace #set ($tabsSortedMapString = $context.macro.params.tabsKeyNames) with  #set ($tabsSortedMapString = $tabsKeyNames)
#end
{{/velocity}}

{{info}}This is home and test page for the "tabs" macro.{{/info}}
Creates tabbed view for specified content areas wrapped in &lt;div/&gt;s with unique ids

== Usage ==

{{box}}
1. Define where tabs should be rendered {{{{{tabs idsToLabels='tabId1=Tab One, tabId2=Tab Two, ..., tabIdN=Tab N' /}}}}}
2. Define tabs content in {{{(%id="&lt;unique tab id&gt;"%)(((&lt;tab content here&gt;)))}}}:
    {{{(%id="tabId1"%)(((Tab 1 Content)))}}}
    {{{(%id="tabId2"%)(((Tab 2 Content)))}}}
    ...
    {{{(%id="tabIdN"%)(((Tab N Content)))}}}
{{/box}}

== Parameters definition ==

|=Name |=Optional |=Allowed values |=Default value |=Description
|idsToLabels |no |String | - |This parameter required a comma-separated tab id to tab label values sting formatted like idsToLabels='tabId1=Tab One, tabId2=Tab Two, tabId3=TabThree'.

== Known issues ==
* Tab size is fixed (toucan skin), labels that do not fit will get trimmed (see [[Tab name too long&gt;&gt;#HTabnametoolong?skin=toucan]])
* Layout consistency is dependent on white-spaces (see [[Interesting layout bugs&gt;&gt;#HInterestinglayoutbugs]])

== Examples ==

=== Content generated by XWiki-wide macro ===
{{tabs idsToLabels='tabId11=My xwiki-wide tabs, tabId12=My working tabs :)' /}}
(%id="tabId11"%)((({{box cssClass="tabId11div"}}
First tab!
{{/box}}
I can post any content here
)))

(%id="tabId12"%)((({{box cssClass="tabId12div"}}
Second tab!
{{/box}}
And here too
)))


=== Known bugs example ===
==== Tab name too long ====
You should view this issue in [[Toucan&gt;&gt;#HTabnametoolong?skin=toucan]] skin.
Content is generated from this code: ##~{~{tabs idsToLabels='sql2key1=Small tab, sql2key2=**Second large tab with large label**' /~}~}##
{{tabs idsToLabels='sql2key1=Small tab, sql2key2=Second large tab with large label' /}}
(%id="sql2key1"%)((({{code language="sql" }}
SELECT COUNT(ctg_id) AS col_0_0_ FROM categories
-- some text
-- several lines 
-- of comments 
-- describing this sql query
{{/code}})))

(%id="sql2key2"%)((({{code language="sql"}}
SELECT COUNT(ctg_id) AS col_0_0_ FROM categories2
-- another tab with text

-- Testing content overflow
-- Text below this box ... 
--  ... should not get covered with it

-- just check this!!!

-- btw: no extra-paragraph has been added before the macro 
{{/code}})))

==== Interesting layout bugs ====
===== White spaces before ~(~%id =====
{{tabs idsToLabels='sql3key1=Tab 1, sql3key2=Tab 2' /}}
    (%id="sql2key1"%)((({{code language="sql" }}
SELECT COUNT(ctg_id) AS col_0_0_ FROM categories
-- some text
-- of comments 
-- describing this sql query
{{/code}})))

(%id="sql3key2"%)((({{code language="sql"}}
SELECT COUNT(ctg_id) AS col_0_0_ FROM categories2
-- another tab with text
-- some text
-- more lines in comments 
-- describing this sql query
{{/code}})))

===== White spaces before ~{~{code =====
Check this bug in both [[Colibri&gt;&gt;#HWhitespacesbeforecode?skin=colibri]] and [[Toucan&gt;&gt;#HWhitespacesbeforecode?skin=toucan]] skins.
{{tabs idsToLabels='sql4key1=Tab 1, sql4key2=Tab 2' /}}
(%id="sql4key1"%)(((
        {{code language="sql" }}
SELECT COUNT(ctg_id) AS col_0_0_ FROM categories
-- some text
-- of comments 
-- describing this sql query
{{/code}})))

(%id="sql4key2"%)(((
        {{code language="sql"}}
SELECT COUNT(ctg_id) AS col_0_0_ FROM categories2
-- another tab with text
-- some text
-- more lines in comments 
-- describing this sql query
{{/code}})))

=== Example for debugging ===
Content generated by in-page macro (used for quick macro debugging). 
See instructions for debugging at the top of the page
{{velocity}}#tabs('tabId31=Tab one, tabId32=Tab 2'){{/velocity}}
(%id="tabId31"%)((({{box }}
First tab content
{{/box}})))

(%id="tabId32"%)((({{box }}
Second tab content
{{/box}})))
</content>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
        <size>30</size>
      </name>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
        <rows>20</rows>
        <size>50</size>
      </code>
      <use>
        <disabled>0</disabled>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
        <cache>0</cache>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
      </use>
      <parse>
        <disabled>0</disabled>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
      </parse>
      <cache>
        <disabled>0</disabled>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
        <cache>0</cache>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <values>long|short|default|forbid</values>
      </cache>
    </class>
    <name>Macro.TabsMacro</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>8d8bae20-099a-4ad7-a98c-a6d2f5fd1017</guid>
    <property>
      <name>TabHelper</name>
    </property>
    <property>
      <code>var TAB_LIST_ITEM_ID_PREFIX = "ListItem";

function activateTab(activatedTabId) {
    // mark the tab itself as Active
    document.getElementById(activatedTabId + TAB_LIST_ITEM_ID_PREFIX).className = 'active';
    // show content pane
    var activatedTabContentDiv = document.getElementById(activatedTabId);
    if (activatedTabContentDiv) {
        activatedTabContentDiv.style.display = 'block';
        activatedTabContentDiv.style.margin = 0;
    }
}

function deactivateTabs(tabsIdsArray, activatedTabId) {
    var deactivatedTabContentDiv = null;
    for (var i = 0; i &lt; tabsIdsArray.length; i++) {
        var deactivatedTabId = tabsIdsArray[i];
        if (activatedTabId == deactivatedTabId) {
            // skip this same tab
            continue;
        }
        // mark the tab itself as Inactive
        document.getElementById(deactivatedTabId + TAB_LIST_ITEM_ID_PREFIX).className = '';
        // hide div
        deactivatedTabContentDiv = document.getElementById(deactivatedTabId);
        if (deactivatedTabContentDiv) {
            deactivatedTabContentDiv.style.display = 'none';
        }
    }
}

function switchTab(activatedTabId, tabsIdsArray) {
    deactivateTabs(tabsIdsArray, activatedTabId);
    activateTab(activatedTabId);
}
</code>
    </property>
    <property>
      <use>onDemand</use>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <cache>long</cache>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.TagClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <tags>
        <disabled>0</disabled>
        <name>tags</name>
        <number>1</number>
        <prettyName>Tags</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
        <cache>0</cache>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <relationalStorage>1</relationalStorage>
        <separator>|</separator>
        <separators>|,</separators>
        <size>30</size>
        <values/>
      </tags>
    </class>
    <name>Macro.TabsMacro</name>
    <number>2</number>
    <className>XWiki.TagClass</className>
    <guid>b148cc67-dbef-4aee-94b9-6a2741ffba97</guid>
    <property>
      <tags/>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.WikiMacroClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <id>
        <disabled>0</disabled>
        <name>id</name>
        <number>1</number>
        <prettyName>Macro id</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
        <size>30</size>
      </id>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>2</number>
        <prettyName>Macro name</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
        <size>30</size>
      </name>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>3</number>
        <prettyName>Macro description</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
        <rows>5</rows>
        <size>40</size>
      </description>
      <defaultCategory>
        <disabled>0</disabled>
        <name>defaultCategory</name>
        <number>4</number>
        <prettyName>Default category</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
        <size>30</size>
      </defaultCategory>
      <supportsInlineMode>
        <disabled>0</disabled>
        <name>supportsInlineMode</name>
        <number>5</number>
        <prettyName>Supports inline mode</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
      </supportsInlineMode>
      <visibility>
        <disabled>0</disabled>
        <name>visibility</name>
        <number>6</number>
        <prettyName>Macro visibility</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
        <cache>0</cache>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <relationalStorage>0</relationalStorage>
        <separator>|</separator>
        <separators>|</separators>
        <size>1</size>
        <values>Current User|Current Wiki|Global</values>
      </visibility>
      <contentType>
        <disabled>0</disabled>
        <name>contentType</name>
        <number>7</number>
        <prettyName>Macro content type</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
        <cache>0</cache>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <relationalStorage>0</relationalStorage>
        <separator>|</separator>
        <separators>|</separators>
        <size>1</size>
        <values>Optional|Mandatory|No content</values>
      </contentType>
      <contentDescription>
        <disabled>0</disabled>
        <name>contentDescription</name>
        <number>8</number>
        <prettyName>Content description (Not applicable for "No content" type)</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
        <rows>5</rows>
        <size>40</size>
      </contentDescription>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>9</number>
        <prettyName>Macro code</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
        <rows>20</rows>
        <size>40</size>
      </code>
    </class>
    <name>Macro.TabsMacro</name>
    <number>3</number>
    <className>XWiki.WikiMacroClass</className>
    <guid>7caa771e-d93c-45b6-ad65-c327c8f1be58</guid>
    <property>
      <id>tabs</id>
    </property>
    <property>
      <name>Tabbed view renderer</name>
    </property>
    <property>
      <description>Creates tabbed view for content areas wrapped into &lt;div /&gt; with unique id (see macro home for details)</description>
    </property>
    <property>
      <defaultCategory>Content</defaultCategory>
    </property>
    <property>
      <supportsInlineMode>1</supportsInlineMode>
    </property>
    <property>
      <visibility>Current Wiki</visibility>
    </property>
    <property>
      <contentType>No content</contentType>
    </property>
    <property>
      <contentDescription/>
    </property>
    <property>
      <code>{{velocity}}
    $xwiki.jsx.use("Macro.TabsMacro")
    #set ($tabsSortedMapString = $context.macro.params.idsToLabels)
    ## split incoming string into 2 velocity arrays
    #set ($tabMapEntriesStringArray = $tabsSortedMapString.split(','))
    #set( $tabIdsArray = [])
    #set( $tabNamesArray = [])
    #foreach($tabEntryString in $tabMapEntriesStringArray )
        #if ("$!tabEntryString" == "" )
            ## ignore null or empty (see http://wiki.apache.org/velocity/CheckingForNull)
        #else
            #set ($tabEntryArray = $tabEntryString.trim().split('='))
            #if ($tabEntryArray.size()!=2)
                {{error}}Parameter $tabEntryString is not a valid key=value pair in the provided map: $tabsSortedMapString{{/error}}
            #else
                #set ($addResult = $tabIdsArray.add($tabEntryArray.get(0).trim()))
                #set ($addResult = $tabNamesArray.add($tabEntryArray.get(1).trim()))
            #end
        #end
    #end
## generate tabs


{{html}}
&lt;div class="floatcontainer"&gt;
    &lt;ul class="xwikitabbar"&gt;
    #set ($firstIteration=true)
    #foreach($tabId in $tabIdsArray)
        #set($count = $velocityCount - 1)
        #set ($tabName = $tabNamesArray.get($count))
        #if ($firstIteration) #set ($firstIteration=false)
        &lt;li id="${tabId}ListItem" onclick="switchTab('${tabId}', #constructJsStringArray($tabIdsArray));" class="active"&gt;&lt;a href="#" onclick="return false;"&gt;${tabName}&lt;/a&gt;&lt;/li&gt;
        #else
        &lt;li id="${tabId}ListItem" onclick="switchTab('${tabId}', #constructJsStringArray($tabIdsArray));"&gt;&lt;a href="#" onclick="return false;"&gt;${tabName}&lt;/a&gt;&lt;/li&gt;
        #end
    #end
    &lt;/ul&gt;
&lt;/div&gt;
## this script is responsible for initial content re-positioning
&lt;script language="JavaScript"&gt;
    ## set convenience variable
    #set ($firstTabId = $tabIdsArray.get(0))
    // approach borrowed from http://www.daniweb.com/forums/thread20256.html#
    var oldFunction${firstTabId} = null;
    function appendedOnLoadFunction() {
        if (oldFunction${firstTabId}) {
            oldFunction${firstTabId}();
        }
        switchTab('${firstTabId}', #constructJsStringArray($tabIdsArray));
    }
    function loadBody() {
        oldFunction${firstTabId} = window.onload;
        window.onload = appendedOnLoadFunction;
    }
    loadBody();
&lt;/script&gt;
{{/html}}
## give the array of strings constructs comma-separated list of
## string values taken into single quotes and square brackets
## e.g. ['item 1', 'item 2' , 'item 3']
#macro(constructJsStringArray $stringArray)
[#foreach($stringElement in $stringArray)'${stringElement}'#if( $velocityHasNext ), #end#end]
#end
{{/velocity}}</code>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
        <size>30</size>
      </name>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
        <rows>5</rows>
        <size>40</size>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
      </mandatory>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
        <size>30</size>
      </defaultValue>
    </class>
    <name>Macro.TabsMacro</name>
    <number>4</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>1ae4145d-0db7-42e9-81e5-0540abe4f3e5</guid>
    <property>
      <name>idsToLabels</name>
    </property>
    <property>
      <description>Comma-separated list of name=value pairs e.g.
'sql1key1=Original SQL, sql1key2=Substituted SQL, sql1key3=Resulting SQL'</description>
    </property>
    <property>
      <mandatory>1</mandatory>
    </property>
    <property>
      <defaultValue/>
    </property>
  </object>
</xwikidoc>
