<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>RISCOSSPlatformCode</web>
  <name>AddProjectFromGithubWidget</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>RISCOSSPlatformCode.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1444313179000</creationDate>
  <date>1444833479000</date>
  <contentUpdateDate>1444663108000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity}}
#if(!$isGuest)
#set($discard = $xwiki.jsx.use("RISCOSSPlatformCode.AddProjectFromGithubWidget"))
#set($discard = $xwiki.ssx.use("RISCOSSPlatformCode.AddProjectFromGithubWidget"))
{{html}}
&lt;h3&gt;Create Your Own GitHub Project Analysis&lt;/h3&gt;
&lt;label&gt;
Please enter the URL of a GitHub repository in the form below: &lt;br/&gt;
&lt;span style="font-size:80%;"&gt;Example: https://github.com/octalmage/robotjs.git&lt;/span&gt;
&lt;/label&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;input type="text" size="50" name="githubRepo" id="githubRepo" /&gt;
&lt;input type="button" value="Analyze Project" class="button" id="addGithubPrjBtn"/&gt;
&lt;span class="ajaxloader" id="ajaxloader"&gt;&lt;/span&gt;
&lt;div id="gitValidationStatus"&gt;&lt;/div&gt;
{{/html}}
#end
{{/velocity}}</content>
  <attachment>
    <filename>ajax-loader.gif</filename>
    <filesize>1849</filesize>
    <author>xwiki:XWiki.Admin</author>
    <date>1364415417000</date>
    <version>1.1</version>
    <comment/>
    <content>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
lycNcWskCkApIyEAOwAAAAAAAAAAAA==
</content>
  </attachment>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
        <size>30</size>
      </name>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
        <rows>20</rows>
        <size>50</size>
      </code>
      <use>
        <disabled>0</disabled>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
        <cache>0</cache>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
      </use>
      <parse>
        <disabled>0</disabled>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
      </parse>
      <cache>
        <disabled>0</disabled>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
        <cache>0</cache>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <values>long|short|default|forbid</values>
      </cache>
    </class>
    <name>RISCOSSPlatformCode.AddProjectFromGithubWidget</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>517bec97-37a5-4944-9ff9-4521e9fa41d1</guid>
    <property>
      <name/>
    </property>
    <property>
      <code>## Globals
var githubProjectsActionURL = "$xwiki.getURL('RISCOSSPlatformCode.GithubAjaxActions', 'view', 'xpage=plain&amp;outputSyntax=plain')";
var runAnalysisURL = "$xwiki.getURL('RISCOSSPlatformCode.EvaluateComponentForUseCase', 'view', 'riskConfiguration=RISCOSSPlatformRiskConfigurations.BasicRiskConfiguration&amp;xpage=plain')";
var projectPageURL = "$xwiki.getURL('RISCOSSPlatformCode.ProjectPage', 'view', 'project=')";
var githubApiURL = "https://api.github.com/repos/";
## Get RISCOSS platform configuration information
#set($confDoc = $xwiki.getDocument("RISCOSSPlatformCode.RISCOSSConfiguration"))
#set($superConf = $confDoc.getObject("RISCOSSPlatformCode.RISCOSSConfiguration"))
#set($clientID = $superConf.getProperty("githubAppClientID").getValue())
#set($clientSecret = $superConf.getProperty("githubAppClientSecret").getValue())
var clientID = "$clientID";
var clientSecret = "$clientSecret";
##

// Refresh ive table
function refreshLiveTable(){
   var liveTable = window["livetable_projects"];
   if(!liveTable){
      liveTable = window["livetable_entities"];
   }
   liveTable.clearCache();
   liveTable.showRows(Math.max(liveTable.lastOffset, 1), liveTable.limit);
}

// Check if github project URL
function isGithubRepoURL(s) {
   var regexp = /((^https:\/\/github.com{1}?)(\/([\w#!:.?+=&amp;%@!\-\/]))+)?(\.git$)/
   return regexp.test(s);
}
//

require(['jquery'], function($){

// Enable or disable entity analysis
function enableDisableEntityAnalysis(githubRepo, status, description, isFork, isExternalGithubProject){
   isFork = isFork ? 1: 0;
   $.ajax({
      "url": githubProjectsActionURL + "&amp;action=enableDisableAnalysis",
      type: "POST",
      dataType: "json",
      data: { githubRepo: githubRepo, status: status, description: description, isFork: isFork}
   }).done(function(rep){
      if(status == "enable" &amp;&amp; rep.entityCreationStatus){
         // Run the data collector
         var entityDocRef = rep.entity;
         $.ajax({
            "url": githubProjectsActionURL + "&amp;action=runDataCollector" + "&amp;entity=" + encodeURIComponent(entityDocRef)
         }).done(function( rep ){
            // Run an analysis
            $.ajax({
               url: runAnalysisURL + "&amp;entity=" + encodeURIComponent(entityDocRef)
            }).done(function( rep ) {
               refreshLiveTable();
               $("#ajaxloader").hide();
               $("#githubRepo").attr("disabled", false);
               $("#githubRepo").val("");
               if(isExternalGithubProject){
                  $("#gitValidationStatus").append('&lt;div&gt;The project analysis was completed successfully. &lt;a href="' + projectPageURL + encodeURIComponent(entityDocRef) + '" class="viewprj"&gt;View the project analysis&lt;/a&gt;&lt;/div&gt;'); 
               }
            });
         });
      }
      else
      {
          refreshLiveTable();
          $("#ajaxloader").hide();
          $("#githubRepo").attr("disabled", false);
          $("#githubRepo").val("");
      }
   });
}


$(function() {
   var messages = {errorMsg:"Please enter a valid Github repository URL.", "successMsg":"Github repository URL OK.", "projectExists":"The project already exists in the list of your github projects.", "projectAlreadyAnalysed": "The project was already analyzed by another user."}
   // Initialize the live validation of the github URL
   $('#githubRepo').keyup(function(e){
     $("#gitValidationStatus").html("");
     if($(this).val() != ""){
        if(!isGithubRepoURL($(this).val())){
           $("#gitValidationStatus").css("color","red");
           $("#gitValidationStatus").html(messages.errorMsg);
        }
        else{
           $("#gitValidationStatus").css("color","green");
           $("#gitValidationStatus").html(messages.successMsg);
        }
     }
   });
   
   // Initialize the add github project button   
   $("#addGithubPrjBtn").click(function(event) {
      var githubRepoURL = $("#githubRepo").val();
      $("#gitValidationStatus").html("");
      var repoOk = false;
      var githubUser = "";
      var githubRepo = "";
      if(isGithubRepoURL(githubRepoURL)){
          var str = githubRepoURL.replace("https://github.com/","").replace(".git", "");
          var t = str.split('/');
          if(t.length == 2){
             githubUser = t[0];
             githubRepo = t[1];
             repoOk = true;
          }  
      }
      else
      {
         // Check if the entered url is github project full_name
         var t = githubRepoURL.split('/');
         if(t.length == 2){
            githubUser = t[0];
            githubRepo = t[1];
            githubRepoURL = "https://github.com/" + githubUser + "/" + githubRepo + ".git";
            repoOk = true;
         }
      }
      if(repoOk){
         // Check if the github project is valid, exists and accessible
         $("#ajaxloader").css("display", "inline-block");
         $("#githubRepo").attr("disabled", true);
         $.ajax({
            url: githubApiURL + githubUser + '/' + githubRepo + '?client_id=' + clientID + '&amp;client_secret=' + clientSecret,
            dataType: "json"
         }).
         fail(function( jqXHR, textStatus, errorThrown ) {
            $("#gitValidationStatus").css("color","red");
            $("#gitValidationStatus").html(messages.errorMsg);
            $("#ajaxloader").hide();
            $("#githubRepo").attr("disabled", false);
         })
         .done(function(rep){
            $("#ajaxloader").hide();
            $("#githubRepo").attr("disabled", false);
            if(rep){
               // Check if the rep exists in list of users projects
               $("#ajaxloader").css("display", "inline-block");
               $("#githubRepo").attr("disabled", true);
               $.ajax({
                  url: githubProjectsActionURL + "&amp;action=checkProjectExists",
                  type: "POST",
                  dataType: "json",
                  data: {githubRepo: githubRepoURL}
               }).done(function( rep ) {
                  if(rep.projectExists == 1 || rep.projectExists == 2){//Project exists
                     $("#gitValidationStatus").css("color","red");
                     if(rep.projectExists == 1){
                        $("#gitValidationStatus").html(messages.projectExists);
                     }
                     else
                     {
                        $("#gitValidationStatus").html(messages.projectAlreadyAnalysed);
                     }
                     if(rep.projectPageURL &amp;&amp; rep.projectPageURL != ""){
                        $("#gitValidationStatus").append('&lt;div&gt;&lt;a href="' + rep.projectPageURL + '" class="viewprj"&gt;View the project analysis&lt;/a&gt;&lt;/div&gt;');
                     } 
                     $("#ajaxloader").hide();
                     $("#githubRepo").attr("disabled", false);  
                  }
                  else
                  {
                     // Get the github user and project name from the URL
                     var str = githubRepoURL.replace("https://github.com/","").replace(".git", "");
                     var t = str.split('/');
                     if(t.length == 2){
                        var gitUser = t[0];
                        var gitRepo = t[1];
                        // Get the repository description
                        $.ajax({
                          url: githubApiURL + gitUser + '/' + gitRepo + '?client_id=' + clientID + '&amp;client_secret=' + clientSecret,
                          dataType: "json"
                        }).done(function(rep){
                          if(rep){
                              $("#ajaxloader").css("display", "inline-block");
                              $("#githubRepo").attr("disabled", true);
                              enableDisableEntityAnalysis(githubRepoURL, "enable", rep.description, rep.fork, true);
                          }
                       });
                    }
                 }
              });
            }
            else
            {
                $("#gitValidationStatus").css("color","red");
                $("#gitValidationStatus").html(messages.errorMsg);
            }  
         });
      }
      else
      {
        $("#gitValidationStatus").css("color","red");
        $("#gitValidationStatus").html(messages.errorMsg);
      }
      event.preventDefault();
   });

   // Initialize projects enable/disable checkboxs
   $( ".xwiki-livetable" ).on( "click", ".enabdisabchk", function() {
      var inputVal = $(this).val();
      var githubRepo = inputVal.split('|')[0];
      var githubProjectID = inputVal.split('|')[1];
      var status = 'enable';
      var projectDescription = "";
      if (!$(this).is(":checked")) {
         // Enable analysis
         status = 'disable';     
      }
      if(status == "enable"){
         $("#analysisstatus" + githubProjectID).html("Evaluating...");
         projectDescription = $("#projectDescription" + githubProjectID).val();
      }
      else
      {
         $("#analysisstatus" + githubProjectID).html("Disabling...");
      }
      if(status == "enable"){
         // Get the github user and project name from the URL
         var str = githubRepo.replace("https://github.com/","").replace(".git", "");
         var t = str.split('/');
         if(t.length == 2){
            var gitUser = t[0];
            var gitRepo = t[1];
            // Get the repository description
            $.ajax({
               url: githubApiURL + gitUser + '/' + gitRepo + '?client_id=' + clientID + '&amp;client_secret=' + clientSecret,
               dataType: "json"
            }).done(function(rep){
               if(rep){
                  enableDisableEntityAnalysis(githubRepo, status, projectDescription, rep.fork, false);
               }
            });
         }
      }
      else
      {
         enableDisableEntityAnalysis(githubRepo, status, projectDescription, "", false);
      }
   });
 
   // Initialize re-evaluate btns
   $( ".xwiki-livetable" ).on( "click", ".reevaluateBtn", function() {
      var projectInfo = $(this).attr('rel');
      var githubRepo = projectInfo.split('|')[0];
      var entityDocRef = projectInfo.split('|')[1];
      var githubProjectID = projectInfo.split('|')[2];
      $("#analysisstatus" + githubProjectID).html("Evaluating...");
      // Run the data collector
      $.ajax({
         "url": githubProjectsActionURL + "&amp;action=runDataCollector" + "&amp;entity=" + encodeURIComponent(entityDocRef)
      }).done(function( rep ){
         // Run an analysis
         $.ajax({
            url: runAnalysisURL + "&amp;entity=" + encodeURIComponent(entityDocRef)
         }).done(function( rep ) {
            refreshLiveTable();
         });
     });
  });

  // Initialize the re-evaluate all project button
  function evaluateProject(projects, nbrProjects, nbrEvaluatedProjects){
     var project = projects[nbrEvaluatedProjects];
     var projectDocRef = project.projectDocRef;
     var title = project.title;
     // Run the data collector
     $.ajax({
        "url": githubProjectsActionURL + "&amp;action=runDataCollector&amp;reevaluateAllPrj=1" + "&amp;entity=" + encodeURIComponent(projectDocRef)
     }).done(function( rep ){
        // Run an analysis
        $.ajax({
           url: runAnalysisURL + "&amp;entity=" + encodeURIComponent(projectDocRef) + "&amp;reevaluateAllPrj=1"
        }).done(function( rep ) {
           nbrEvaluatedProjects++;
           if(nbrEvaluatedProjects &lt;= (nbrProjects)){
              $("#nbrevalprj").html("&lt;strong&gt;Re-evaluated projects: &lt;/strong&gt;" + nbrEvaluatedProjects);
              $("#listrevalprj").append("&lt;div&gt;" + title + "&lt;/div&gt;");
              if(nbrEvaluatedProjects == nbrProjects){
                 $("#ajaxloader").hide();
              }
              else
              {
                 evaluateProject(projects, nbrProjects, nbrEvaluatedProjects);
              }
           }
        });
     });
  }

  $("#evaluateAllPrjBtn").click(function(){
     // Get all projects doc references
     $("#ajaxloader").css("display", "inline-block");
     $("#nbrprj").html("");
     $("#nbrevalprj").html("");
     $("#listrevalprj").html("");
     $.ajax({
        "url": githubProjectsActionURL + "&amp;action=getAllGithubProjects",
        "dataType": "json"
     }).done(function( projects ) {
           if(projects){
              $("#nbrprj").html("&lt;strong&gt;Number of projects: &lt;/strong&gt;" + projects.length);
              if(projects.length &gt; 0){
                 var nbrProjects = projects.length;
                 var nbrEvaluatedProjects = 0;
                 $("#listrevalprj").show();
                 evaluateProject(projects, nbrProjects, nbrEvaluatedProjects);
              }
           }
        });
  });
});
});</code>
    </property>
    <property>
      <use>onDemand</use>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <cache>long</cache>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <disabled>0</disabled>
        <name>cache</name>
        <number>1</number>
        <prettyName>Caching policy</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
        <cache>0</cache>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <values>long|short|default|forbid</values>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
        <rows>20</rows>
        <size>50</size>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>3</number>
        <prettyName>Name</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
        <size>30</size>
      </name>
      <parse>
        <disabled>0</disabled>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
      </parse>
      <use>
        <disabled>0</disabled>
        <name>use</name>
        <number>5</number>
        <prettyName>Use this extension</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
        <cache>0</cache>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
      </use>
    </class>
    <name>RISCOSSPlatformCode.AddProjectFromGithubWidget</name>
    <number>2</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>1886e759-620d-4f5b-97e8-90c1bb772d61</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.enabdisabchk{
   float:left;
}

.analysistatus{
   text-align:left;
}

.reevaluateBtn{
   background : url("$xwiki.getSkinFile('icons/silk/arrow_rotate_clockwise.png')");
   background-repeat: no-repeat;
   display: inline-block;
   width: 16px;
   height: 16px;
   float: left;
}

td.reevaluate{
   text-align: left !important;
}

#gitValidationStatus{
   padding: 1em 0;
}

.ajaxloader{
   background : url("$doc.getAttachmentURL('ajax-loader.gif')");
   background-repeat: no-repeat;
   display: inline-block;
   width: 16px;
   height: 16px;
   display: none;
}

a.viewprj, a.viewprj:link, a.viewprj:visited, a.viewprj:hover, a.viewprj:active{
   color: blue;
   text-decoration: underline;
}</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
